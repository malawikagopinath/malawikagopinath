[
  {
    "objectID": "Assignment 1.html",
    "href": "Assignment 1.html",
    "title": "Assignment 1",
    "section": "",
    "text": "Anscombe’s Examples\n\n\n\n\n\n\n\n\nGraph 1\nGraph 2\n\n\n\n\n\n\n\n\nGraph 3  \nGraph 4  \n\n\n\n\n\n\nGraph 1-4\n\n\n\nGenerative Art Examples:\n\n\n\n\na.\n\n\n\nEisele, Stefan. Figures of Discomfort. Blender Artists Community, 20 Jan. 2023. https://blenderartists.org/t/generative-art-project-figures-of-discomfort-created-with-geometry-nodes-and-eevee-renderer/1445537\n\n\n\n\nb.\n\n\n\nBerg, A. (2023, August 10). Generative art: Exploring new visual frontiers with algorithmic techniques. ArtStation. https://www.artstation.com/artwork/generative-art-exploring-new-visual-frontiers-with-algorithmic-techniques\n\n\n\n\nc.\n\n\n\nDunn, Emory. Processing and Generating Art. Apr. 2020. https://emorydunn.com/blog/2020/04/01/processing-&-generative-art/\n\n\nRun Fall.R\n\na) Give your own color\nThe color chose was a fall red with hex color code #9f1006\nb) Upload\n\n\n\nFall Leaf.\n\n\n\nWrite a critique on a chart in published work\n\nHow the Nike VaporFlys compare with other popular running shoes?\n\n\n\nGraph.\n\n\n\nNetwork, The Learning. “How the Nike VaporFlys Compare with Other Popular Running Shoes.” The New York Times, The New York Times, 6 Dec. 2018, www.nytimes.com/2018/12/06/learning/whats-going-on-in-this-graph-dec-12-2018.html.\n\nThe above chart is an interactive chart feature on The New York Times’“What’s going on in this map?”. The chart shows the comparison of the Nike vaporfly, a two fifty dollar shows, with other popular running brands. The graph measures different marathon end times across various shoes. In the interactive map found on the website one can hover over the individual circles to view different shoes and their different end times to see which shoes is claimed to be faster and by what percentage. Nike claims that the Vaporfly can imporve run time efficiency by four percent compared to all other shoes. The statistics found in this article are from Strava, a running and fitness app where one can record their runs, shoes, and effort.\nThe dot plot used to analyze this data is effective in showing the different shows analyzed and distinguishes the Nike Vaporfly as an ‘outlier’ while also providing a visual summary of different race times. However, there are also some limitations. For example, the dot plot only provides a linear view. We are able to see the percentage improvement but not how many participants used a particular shoe. Knowing how many participants used a particular brand and style of shoe would help to further analyze this data. There is also no clear control group and due to the nature of the study a control group is harder to achieve hence making this study more observational. There are also some external limitations to consider like whether the race routes were the same, weather conditions day of, athletic ability/competitiveness of each participant. It would also be interesting to see price of shoe versus durability and performance.\nThe chart used in this article distinguishes between the different shoes used and highlights performances and efficiency of race times based on the show worn. However, there are several limitations to this study such as a limited control group, number of participants, and other external factors. While providing visual representation, the missing factors would be able to make the graph more dimensional and provide missing context."
  },
  {
    "objectID": "about.html",
    "href": "about.html",
    "title": "About Me",
    "section": "",
    "text": "This page contains information about me."
  },
  {
    "objectID": "home.html",
    "href": "home.html",
    "title": "Home",
    "section": "",
    "text": "Hello, I’m Mala! Welcome to my website."
  },
  {
    "objectID": "Assignment 2.html",
    "href": "Assignment 2.html",
    "title": "Assignment 2",
    "section": "",
    "text": "1. Running Paul Murrell’s RGraphics basic R programs\n\ni. Can you change `pch`?\nYes, the pch value can be changed. Here are examples of different symbols used for the values on the scatter plot graph. For example, when the pch value on the graph was 16 the symbol was a filled in circle versus a triangle when it was 17. \n\n\n\n\nii. Try different cex values?\nThe cex values represents the sizes of the different plotting symbols and making them bigger or smaller. The larger the cex value the larger the plot. Here is an example between using cex value of 2 versus cex value of 8\n\n\n\niii. Changing background color\nChanged the background color from grey to blue:\nChanging the background color of the histogram by replacing col=“gray80” with col=“lightblue”iv. What does the first number in axis() stand for?\nThe first number in axis stands for which axis we are indicating the program to draw on. 1 indicates the top x-axis, 2 is the left y-axis, 3 is the bottom x-axis, and 4 is the right y-axis.\n\n\n\nv. Can you generate these charts individually?\nYes these charts can all be generated individually. In order to do this we need to remove the line of code par(mfrow=c(3, 2)) and run each plot by itself.\nExample of individual pie chart versus all charts together:\n\n\n\n\n\nc. Plotting functions (note: exercise using the happy planet data set\nhttp://happyplanetindex.org)\ni. par()\n\nPar is used at beginning of each separate graph inorder to reset the plot settings and produce these results individually \n\n\npar(mfrow=c(1, 1), mar=c(5, 5, 3, 3))  \n\nii. lines()\nUsing lines() to add a line into the HPI vs Life Expectancy graph \nlines(density(cleaned_data$HPI), col=“gray50”, lwd=2)\n\niii. points()\nUsing points to add different plots or points to both of the scatterplots\npoints(cleaned_data$HPI, cleaned_data$Life_Expectancy_years, pch=16, col=colors, cex=1.2)  # Points plot\npoints(cleaned_data$HPI, cleaned_data$Carbon_Footprint_tCO2e, pch=21, bg=colors_fp, \n       col=“gray30”, cex=1.5)  # Points plot with blue background\n\niv. axis()\nThis is used to add a custom or different axis to any of the plots \naxis(1, at=c(0, 5, 10), labels=c(“0”, “5”, “10”))\nv. box()\nUsing box to add a box around the plots\nbox(bty=“u”) \n\n\nvi. text()\nText is used to add text annotations to a plot \ntext(x=cleaned_data$HPI[1], y=cleaned_data$Life_Expectancy_years[1], \n     labels=cleaned_data$Country[1], pos=4, col=“gray50”, cex=0.8)  \n\n\nvii. mtext()\nThis is used to add margins to different plots \nmtext(“First country label”, side=3, line=1, cex=1, col=“black”)  # Title\nviii. hist()\nThe hist function is used to create a histogram. Here is the code used to  create our HPI histogram \nhist(cleaned_data$HPI, breaks=10, col=“gray80”, main=“Histogram of HPI”, xlab=“HPI”, \n     ylab=“Frequency”, ylim=c(0, max(table(cut(cleaned_data$HPI, breaks=10)))))\nix. boxplot()\nThis is used to create a boxplot. Here is the code used to create a boxplot for life expectancy \nboxplot(cleaned_data$Life_Expectancy_years ~ cleaned_data$Continent, \n        main=“Life Expectancy by Region”, xlab=“Region”, ylab=“Life Expectancy”, \n        col=“gray90”, border=“gray50”)  # Boxplot\n\n\nx. legend()\nThis is used to add a legend to the plot \nlegend(“topright”, legend=c(“Data Points”), pch=16, col=“gray30”) \n\nxi. persp()\nThe function persp is used to  create a 3D perspective plot\npersp(x, y, z, theta = 30, phi = 30, expand = 0.5, \n      col = “lightblue”, border = “gray50”, ltheta = 50, \n      shade = 0.5, xlab = “X-axis”, ylab = “Y-axis”, zlab = “Z-axis”)\nxii. names()\nThis function is used to set names for different columns \nnames(cleaned_data) &lt;- gsub(” “,”_“, names(cleaned_data)) \n\n\nxiii. pie()\nThe function pie is used to create a pie chart. Here, a pie chart is being used to observe the top five countries by ecological footprint \n\n\n\nd. Post your works on your blog/website\nBelow are the plots produced using the all countries sheet from the happy planet dataset."
  },
  {
    "objectID": "Assignment 3.html",
    "href": "Assignment 3.html",
    "title": "Assignment 3",
    "section": "",
    "text": "a. Choose one of the six charts and explain how it is configured by adding documentation to the codes.\nThe chart selected was the Barplot, below is the code for the graph. \n# Barplot \npar(mar=c(2, 3.1, 2, 2.1))   # This is used to set the margins of the plot and make sure each plot is produced individually. \nmidpts &lt;- barplot(VADeaths,  # This is to create the barplot for the VADeaths Dataframe\ncol=gray(0.1 + seq(1, 9, 2)/11), # This is to specify which color to use - here we are using gray\n names=rep(\"\", 4)) \nmtext(sub(\" \", \"\\n\", colnames(VADeaths)), # This adds texts to margins\nat=midpts, side=1, line=0.5, cex=0.5) #  This indicates the positions, axis, margins, and size\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,  # This adds labels to the bars in the bar plot and ‘rep’ repeats the middle point each 5 times \nVADeaths,  # test to be displayed\ncol=rep(c(\"white\", \"black\"), times=3:2),  # color of the text\ncex=0.8) # size of the text\n par(mar=c(5.1, 4.1, 4.1, 2.1))   # This resets the margins to the default after the plot has been created"
  },
  {
    "objectID": "Assignment 3.html#rerun-murrell01.r",
    "href": "Assignment 3.html#rerun-murrell01.r",
    "title": "Assignment 3",
    "section": "",
    "text": "a. Choose one of the six charts and explain how it is configured by adding documentation to the codes.\nThe chart selected was the Barplot, below is the code for the graph. \n# Barplot \npar(mar=c(2, 3.1, 2, 2.1))   # This is used to set the margins of the plot and make sure each plot is produced individually. \nmidpts &lt;- barplot(VADeaths,  # This is to create the barplot for the VADeaths Dataframe\ncol=gray(0.1 + seq(1, 9, 2)/11), # This is to specify which color to use - here we are using gray\n names=rep(\"\", 4)) \nmtext(sub(\" \", \"\\n\", colnames(VADeaths)), # This adds texts to margins\nat=midpts, side=1, line=0.5, cex=0.5) #  This indicates the positions, axis, margins, and size\ntext(rep(midpts, each=5), apply(VADeaths, 2, cumsum) - VADeaths/2,  # This adds labels to the bars in the bar plot and ‘rep’ repeats the middle point each 5 times \nVADeaths,  # test to be displayed\ncol=rep(c(\"white\", \"black\"), times=3:2),  # color of the text\ncex=0.8) # size of the text\n par(mar=c(5.1, 4.1, 4.1, 2.1))   # This resets the margins to the default after the plot has been created"
  },
  {
    "objectID": "Assignment 3.html#rerun-anscombe01.r-in-teams-folder",
    "href": "Assignment 3.html#rerun-anscombe01.r-in-teams-folder",
    "title": "Assignment 3",
    "section": "2. Rerun anscombe01.R (in Teams folder)",
    "text": "2. Rerun anscombe01.R (in Teams folder)\na. Compare the regression models\n\nBased on the regression model analysis, the four models in Anscombe have similar characteristics with almost similar intercepts and slopes, as well as consistent residual errors. The F-test values also indicate a strong positive significance. All the models also have a p test value that is below 0.01, further indicating the significance of the models and thus indicating a close fit to the data.\nHowever, despite how similar these datasets are we notice very different graphical representations for each of them. This further highlights the importance of different datasets and understanding how to best visually represent each of them and emphasizes the need for careful observation and analysis. \nb. Compare different ways to create the plots (e.g. changing colors, line types, plot characters)\nHere we can see three different ways to create the plots. The first being the original, the second is with changing the colors, and this is changing the plotting character to an ‘x’. The symbol ‘x’ when used on these plots do not stand out as much as the original filled circle, the red also makes it dull compared to the orange filled circles used in the original plots. The graph line being blue like the original also stands out more than changing it to red. \n\n\n\n\n\n\n\n\n3. Can you finetune the charts without using other packages (consult RGraphics by Murrell)?\nYes these charts can be fine tuned to use a serif font, try non-default colors, and use own plotting characters without installing other packages. \n\na. Use a serif font\nSerif font or any other fonts can be inserted like so \npar(family = “serif”)\n\nb. Try non-default colors\nNon-default colors can be implemented using the ‘col=’ can be used. Hex codes for colors can be inserted.\nplot(pressure, pch=16, col=\"#FF5733\", bg=\"#D1E231\")  # custom point color and background color\ntext(150, 600, \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\",\ncol=\"forestgreen\", cex=1.2)  # Custom color for the text\nc. Use own plotting character\nPch can be used to customize plotting characters. The pch values range from 0 to 25. For example pch =19 would be filled circles as the plotting character and pch = 24 would be upward filled triangles.\nplot(pressure, pch=24, col=\"red\", bg=\"yellow\", cex=1.5) # Use upward-pointing triangle with custom fill color text(150, 600, \"Pressure (mm Hg)\\nversus\\nTemperature (Celsius)\", col=\"green\", cex=1.2, family=\"serif\")\n\n4. How about with ggplot2? (use tidyverse package)\nYes, the charts can be finetuned. Overall the usage of ggplot simplifies the graphics. It allows for a wider range of complex but visually informative graphs to be created. Here is the histogram and boxplot from murrel using ggplot. We can see a clear distinction between the data making it easier to understand."
  },
  {
    "objectID": "Assignment 4.html",
    "href": "Assignment 4.html",
    "title": "Assignment 4",
    "section": "",
    "text": "a. Variable Width Column Chart\nlibrary(ggplot2)\n\ndata &lt;- data.frame(\n  category = c(\"A\", \"B\", \"C\", \"D\"),\n  value = c(3, 5, 2, 8),\n  width = c(1, 2, 3, 4)  \n)\n\n# Varibale Width Column Chart\nggplot(data, aes(x = category, y = value, width = width)) +\n  geom_col(fill = \"skyblue\", position = position_identity(), color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Variable Width Column Chart\", \n       x = \"Category\", \n       y = \"Value\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\nb. Table or Tables with embedded charts\n# Embedded Chart\nggplot(data, aes(x = category, y = value)) +\n  geom_point(aes(size = value), shape = 21, fill = \"skyblue\") +  \n  geom_text(aes(label = value), vjust = -0.5, size = 4) +  \n  theme_minimal() +\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), \n        axis.text.y = element_blank(), axis.ticks.y = element_blank()) + \n  labs(title = \"Table with Embedded Charts\")\n\n\n\n\n\nc. Bar Chart\n# Bar Chart\nggplot(data, aes(x = category, y = value)) + \n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  theme_minimal() +\n  labs(title = \"Barplot\", x = \"Category\", y = \"Value\")\n\n\n\n\n\nd. Column Chart\n# Horizontal Bar\nggplot(data, aes(x = category, y = value)) + \n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Horizontal Barplot\", x = \"Value\", y = \"Category\")"
  },
  {
    "objectID": "Assignment 4.html#generate-a-program-to-create-a-chart-using-either-r-graphics-or-ggplot2-or-any-r-packages",
    "href": "Assignment 4.html#generate-a-program-to-create-a-chart-using-either-r-graphics-or-ggplot2-or-any-r-packages",
    "title": "Assignment 4",
    "section": "",
    "text": "a. Variable Width Column Chart\nlibrary(ggplot2)\n\ndata &lt;- data.frame(\n  category = c(\"A\", \"B\", \"C\", \"D\"),\n  value = c(3, 5, 2, 8),\n  width = c(1, 2, 3, 4)  \n)\n\n# Varibale Width Column Chart\nggplot(data, aes(x = category, y = value, width = width)) +\n  geom_col(fill = \"skyblue\", position = position_identity(), color = \"black\") +\n  theme_minimal() +\n  labs(title = \"Variable Width Column Chart\", \n       x = \"Category\", \n       y = \"Value\") +\n  theme(legend.position = \"none\")\n\n\n\n\n\nb. Table or Tables with embedded charts\n# Embedded Chart\nggplot(data, aes(x = category, y = value)) +\n  geom_point(aes(size = value), shape = 21, fill = \"skyblue\") +  \n  geom_text(aes(label = value), vjust = -0.5, size = 4) +  \n  theme_minimal() +\n  theme(axis.title.x = element_blank(), axis.title.y = element_blank(), \n        axis.text.y = element_blank(), axis.ticks.y = element_blank()) + \n  labs(title = \"Table with Embedded Charts\")\n\n\n\n\n\nc. Bar Chart\n# Bar Chart\nggplot(data, aes(x = category, y = value)) + \n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  theme_minimal() +\n  labs(title = \"Barplot\", x = \"Category\", y = \"Value\")\n\n\n\n\n\nd. Column Chart\n# Horizontal Bar\nggplot(data, aes(x = category, y = value)) + \n  geom_bar(stat = \"identity\", fill = \"skyblue\") +\n  coord_flip() +\n  theme_minimal() +\n  labs(title = \"Horizontal Barplot\", x = \"Value\", y = \"Category\")"
  },
  {
    "objectID": "Assignment 5.html",
    "href": "Assignment 5.html",
    "title": "Assignment 5",
    "section": "",
    "text": "a. Histogram\n# Histogram\ndata &lt;- rnorm(100)\nhist(data, col=\"lightblue\", border=\"black\", main=\"Histogram\", xlab=\"Values\", ylab=\"Frequency\", \n     breaks=10, las=1, font.main=2, cex.lab=1.2)\n\n\n\n\n\nb. Barchart\ni) Vertical\n# Vertical Bar Chart\ncategories &lt;- c(\"A\", \"B\", \"C\", \"D\")\nvalues &lt;- c(4, 7, 9, 3)\nbarplot(values, names.arg=categories, col=\"lightblue\", main=\"Vertical Bar Chart\", \n        ylab=\"Count\", xlab=\"Categories\", border=\"black\", las=1, cex.names=1.2)\n\n\n\n\n\nii) Horizontal\n\n# Horizontal Bar Chart\nbarplot(values, names.arg=categories, col=\"lightblue\", horiz=TRUE, main=\"Horizontal Bar Chart\", \n        xlab=\"Count\", border=\"black\", las=1, cex.names=1.2)\n\n\n\n\n\nc. Piechart\n\n# Pie Chart\npie(values, labels=categories, col=c(\"lightblue\", \"lightgreen\", \"lightpink\", \"lightyellow\"), \n    main=\"Pie Chart\", radius=1, border=\"black\")\n\n\n\n\n\nd. Boxplot\n\n# Boxplot\nboxplot_data &lt;- list(Group1=rnorm(50), Group2=rnorm(50, mean=3), Group3=rnorm(50, mean=6))\nboxplot(boxplot_data, col=c(\"lightblue\", \"lightgreen\", \"lightpink\"), main=\"Boxplot\", \n        ylab=\"Values\", border=\"darkblue\", las=1, font.lab=2, cex.lab=1.2)\n\n\n\n\n\ne. Scatterplot\n# Scatterplot\nx &lt;- rnorm(50)\ny &lt;- x + rnorm(50, sd=0.5)\nplot(x, y, main=\"Scatterplot\", xlab=\"X Axis\", ylab=\"Y Axis\", pch=19, col=\"darkblue\", \n     cex=1.5, font.main=2, cex.lab=1.2, col.axis=\"black\", las=1)"
  },
  {
    "objectID": "Assignment 5.html#using-sample-datasets-or-own-data-create-the-following-charts-using-only-r-graphics-functions-and-customize-charts-with-different-themes.",
    "href": "Assignment 5.html#using-sample-datasets-or-own-data-create-the-following-charts-using-only-r-graphics-functions-and-customize-charts-with-different-themes.",
    "title": "Assignment 5",
    "section": "",
    "text": "a. Histogram\n# Histogram\ndata &lt;- rnorm(100)\nhist(data, col=\"lightblue\", border=\"black\", main=\"Histogram\", xlab=\"Values\", ylab=\"Frequency\", \n     breaks=10, las=1, font.main=2, cex.lab=1.2)\n\n\n\n\n\nb. Barchart\ni) Vertical\n# Vertical Bar Chart\ncategories &lt;- c(\"A\", \"B\", \"C\", \"D\")\nvalues &lt;- c(4, 7, 9, 3)\nbarplot(values, names.arg=categories, col=\"lightblue\", main=\"Vertical Bar Chart\", \n        ylab=\"Count\", xlab=\"Categories\", border=\"black\", las=1, cex.names=1.2)\n\n\n\n\n\nii) Horizontal\n\n# Horizontal Bar Chart\nbarplot(values, names.arg=categories, col=\"lightblue\", horiz=TRUE, main=\"Horizontal Bar Chart\", \n        xlab=\"Count\", border=\"black\", las=1, cex.names=1.2)\n\n\n\n\n\nc. Piechart\n\n# Pie Chart\npie(values, labels=categories, col=c(\"lightblue\", \"lightgreen\", \"lightpink\", \"lightyellow\"), \n    main=\"Pie Chart\", radius=1, border=\"black\")\n\n\n\n\n\nd. Boxplot\n\n# Boxplot\nboxplot_data &lt;- list(Group1=rnorm(50), Group2=rnorm(50, mean=3), Group3=rnorm(50, mean=6))\nboxplot(boxplot_data, col=c(\"lightblue\", \"lightgreen\", \"lightpink\"), main=\"Boxplot\", \n        ylab=\"Values\", border=\"darkblue\", las=1, font.lab=2, cex.lab=1.2)\n\n\n\n\n\ne. Scatterplot\n# Scatterplot\nx &lt;- rnorm(50)\ny &lt;- x + rnorm(50, sd=0.5)\nplot(x, y, main=\"Scatterplot\", xlab=\"X Axis\", ylab=\"Y Axis\", pch=19, col=\"darkblue\", \n     cex=1.5, font.main=2, cex.lab=1.2, col.axis=\"black\", las=1)"
  },
  {
    "objectID": "Assignment 5.html#repeat-1-using-ggplot2",
    "href": "Assignment 5.html#repeat-1-using-ggplot2",
    "title": "Assignment 5",
    "section": "2. Repeat 1 using ggplot2",
    "text": "2. Repeat 1 using ggplot2\na. Histogram\n\nlibrary(ggplot2)\n\n# Histogram (ggplot2)\ndata &lt;- data.frame(values = rnorm(100))\nggplot(data, aes(x=values)) +\n  geom_histogram(binwidth=0.5, fill=\"lightblue\", color=\"black\") +\n  labs(title=\"Histogram\", x=\"Values\", y=\"Frequency\") +\n  theme_minimal() +\n  theme(text = element_text(size=12, face=\"plain\"))\n\n\n\n\n\nb. Barchart\ni) Vertical\n\n# Vertical Bar Chart (ggplot2)\nbar_data &lt;- data.frame(categories=c(\"A\", \"B\", \"C\", \"D\"), values=c(4, 7, 9, 3))\nggplot(bar_data, aes(x=categories, y=values)) +\n  geom_bar(stat=\"identity\", fill=\"lightblue\", color=\"black\") +\n  labs(title=\"Vertical Bar Chart\", x=\"Categories\", y=\"Count\") +\n  theme_classic() +\n  theme(text = element_text(size=12, face=\"italic\"))\n\n\n\n\n\nii) Horizontal\n\n# Horizontal Bar Chart (ggplot2)\nggplot(bar_data, aes(x=values, y=categories)) +\n  geom_bar(stat=\"identity\", fill=\"lightblue\", color=\"black\") +\n  labs(title=\"Horizontal Bar Chart\", x=\"Count\", y=\"Categories\") +\n  theme_light() +\n  theme(axis.text=element_text(size=10, face=\"bold\"))\n\n\n\n\n\nc. Piechart\n\n# Pie Chart (ggplot2)\nggplot(bar_data, aes(x=\"\", y=values, fill=categories)) +\n  geom_bar(stat=\"identity\", color=\"black\") +\n  coord_polar(\"y\") +\n  labs(title=\"Pie Chart\") +\n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"lightpink\", \"lightyellow\")) +  # Custom colors\n  theme_void() +\n  theme(legend.position=\"bottom\")\n\n\n\n\n\nd. Boxplot\n\nboxplot_data &lt;- data.frame(\n  Group = c(\"A\", \"A\", \"B\", \"B\", \"C\", \"C\", \"D\", \"D\"),\n  Values = c(5, 7, 4, 6, 8, 3, 7, 5)\n)\nggplot(boxplot_data, aes(x=Group, y=Values, fill=Group)) +\n  geom_boxplot(outlier.shape=19, outlier.colour=\"darkred\") +  \n  labs(title=\"Boxplot\", x=\"Group\", y=\"Values\") +  \n  scale_fill_manual(values=c(\"lightblue\", \"lightgreen\", \"lightpink\", \"lightyellow\")) +  \n  theme_bw() +  \n  theme(text = element_text(size=12, family=\"Arial\", face=\"bold\")) \n\n\n\n\n\ne. Scatterplot\n# Scatterplot (ggplot2)\nscatter_data &lt;- data.frame(x = rnorm(50), y = rnorm(50))\nggplot(scatter_data, aes(x=x, y=y)) +\n  geom_point(color=\"darkblue\", size=3) +\n  labs(title=\"Scatterplot\", x=\"X Axis\", y=\"Y Axis\") +\n  theme_minimal() +\n  theme(text = element_text(size=12, face=\"bold\", color=\"darkblue\"))"
  }
]